[tool:pytest]
# Pytest configuration for wine interpretability system

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    performance: Performance and benchmarking tests
    slow: Tests that take a long time to run
    
# Output options
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --durations=5
    -ra

# Minimum version
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage options (when using --cov)
[coverage:run]
source = wine_interpretability
omit = 
    */tests/*
    */test_*
    setup.py
    
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
precision = 2

[coverage:html]
directory = htmlcov